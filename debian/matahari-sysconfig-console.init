#!/bin/sh

# the following is chkconfig init header
# matahari-sysconfig-console: Matahari QMF sysconfig-console daemon
### BEGIN INIT INFO
# Provides: matahari-sysconfig-console
# Required-Start: $local_fs
# Required-Stop: $local_fs
# Should-Start: matahari-broker
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Starts and stops the sysconfig-console matahari daemon
# Description: Matahari sysconfig-console daemon using the AMQP protocol.
### END INIT INFO

# chkconfig: - 99 01
# description: Matahari sysconfig-console daemon using the AMQP protocol.
# processname: matahari-sysconfig-consoled
# pidfile: /var/run/matahari-sysconfig-console.pid
#

# Turn off automatic systemd redirects
#SYSTEMCTL_SKIP_REDIRECT=1

# Source function library.
test -f /lib/lsb/init-functions && . /lib/lsb/init-functions

# (RPM)
if [ -d /etc/sysconfig ]; then
	[ -f /etc/sysconfig/matahari ] && . /etc/sysconfig/matahari
fi

# (DEBIAN/UBUNTU)
if [ -d /etc/default ]; then
    [ -f /etc/default/matahari ] && . /etc/default/matahari
fi

SERVICE=matahari-sysconfig-console
PROCESS=matahari-qmf-sysconfig-consoled
# Old process naming convention, this is here
# for compability sake when starting/stopping the
# service from an upgrade of 0.4.0 > 0.4.2
OLDPROCESS=matahari-sysconfig-consoled

RETVAL=0

start() {
    echo -n $"Starting the $SERVICE daemon: "

    MATAHARI_ARGS="$MATAHARI_CONSOLE_ARGS $sysconfig_CONSOLE_ARGS"
    if [ -n "$MATAHARI_PORT" ]; then
        MATAHARI_ARGS="--port $MATAHARI_PORT $MATAHARI_ARGS"
    fi
    if [ -n "$MATAHARI_BROKER" ]; then
        MATAHARI_ARGS="--broker $MATAHARI_BROKER $MATAHARI_ARGS"
    fi

    export QPID_SSL_CERT_DB
    export QPID_SSL_CERT_PASSWORD_FILE

    start_daemon $PROCESS $MATAHARI_ARGS --daemon
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && touch /var/lock/subsys/$SERVICE
}

stop() {
    echo -n $"Stopping the $SERVICE daemon: "

    # Check for OLDPROCESS for pre 0.4.2 compat
    pidofproc $OLDPROCESS >/dev/null
    RETVAL=$?
    if [ $RETVAL -lt 3 ]; then
        killproc $OLDPROCESS
        RETVAL=$?
    else
        killproc $PROCESS
        RETVAL=$?
    fi
    echo
    if [ $RETVAL -eq 0 ]; then
        rm -f /var/lock/subsys/$SERVICE
        rm -f /var/run/$SERVICE.pid
    fi
}

restart() {
    stop
    start
}

reload() {
    echo -n $"Reloading the $SERVICE configuration: "

    killproc $PROCESS -HUP
    RETVAL=$?
    echo
    return $RETVAL
}

# See how we were called.
case "$1" in
    start)
        status $PROCESS >/dev/null || $1
        ;;
    stop|restart|reload)
        $1
        ;;
    status)
        status $PROCESS
        RETVAL=$?
        ;;
    force-reload)
        reload
        ;;
    condrestart|try-restart)
        [ -f /var/lock/subsys/$SERVICE ] && restart || :
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload}"
        exit 1
        ;;
esac
exit $RETVAL
